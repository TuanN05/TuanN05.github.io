// D·ªØ li·ªáu c√° nh√¢n l∆∞u trong b·ªô nh·ªõ
let personalData = {
  fullName: "Nguy·ªÖn Th√°i Tu·∫•n",
  birthDate: "22/09/2005",
  gender: "Nam",
  address: "TP. H·ªì Ch√≠ Minh",
  phone: "0359426405",
  email: "nguyenthaituan205@gmail.com",
  careerGoal:
    "Tr·ªü th√†nh m·ªôt l·∫≠p tr√¨nh vi√™n Full-stack chuy√™n nghi·ªáp, c√≥ kh·∫£ nƒÉng ph√°t tri·ªÉn c√°c ·ª©ng d·ª•ng web hi·ªán ƒë·∫°i v√† ƒë√≥ng g√≥p v√†o c√°c d·ª± √°n c√¥ng ngh·ªá c√≥ t√°c ƒë·ªông t√≠ch c·ª±c ƒë·∫øn c·ªông ƒë·ªìng.",
};

// H√†m m·ªü modal ch·ªânh s·ª≠a
function openEditModal() {
  const modal = document.getElementById("editModal");

  // ƒêi·ªÅn d·ªØ li·ªáu hi·ªán t·∫°i v√†o form
  document.getElementById("editFullName").value = personalData.fullName;
  document.getElementById("editBirthDate").value = personalData.birthDate;
  document.getElementById("editGender").value = personalData.gender;
  document.getElementById("editAddress").value = personalData.address;
  document.getElementById("editPhone").value = personalData.phone;
  document.getElementById("editEmail").value = personalData.email;
  document.getElementById("editCareerGoal").value = personalData.careerGoal;

  modal.style.display = "block";

  // Th√™m hi·ªáu ·ª©ng fade in
  setTimeout(() => {
    modal.style.opacity = "1";
  }, 10);
}

// H√†m ƒë√≥ng modal
function closeEditModal() {
  const modal = document.getElementById("editModal");
  modal.style.display = "none";
}

// ƒê√≥ng modal khi click b√™n ngo√†i
window.onclick = function (event) {
  const modal = document.getElementById("editModal");
  if (event.target == modal) {
    closeEditModal();
  }
};

// X·ª≠ l√Ω form submit
document.getElementById("editForm").addEventListener("submit", function (e) {
  e.preventDefault();

  // C·∫≠p nh·∫≠t d·ªØ li·ªáu
  personalData.fullName = document.getElementById("editFullName").value;
  personalData.birthDate = document.getElementById("editBirthDate").value;
  personalData.gender = document.getElementById("editGender").value;
  personalData.address = document.getElementById("editAddress").value;
  personalData.phone = document.getElementById("editPhone").value;
  personalData.email = document.getElementById("editEmail").value;
  personalData.careerGoal = document.getElementById("editCareerGoal").value;

  // C·∫≠p nh·∫≠t giao di·ªán
  updateDisplay();

  // ƒê√≥ng modal
  closeEditModal();

  // Hi·ªÉn th·ªã th√¥ng b√°o th√†nh c√¥ng
  showNotification("Th√¥ng tin ƒë√£ ƒë∆∞·ª£c c·∫≠p nh·∫≠t th√†nh c√¥ng!");
});

// H√†m c·∫≠p nh·∫≠t hi·ªÉn th·ªã
function updateDisplay() {
  document.getElementById("fullName").textContent = personalData.fullName;
  document.getElementById("birthDate").textContent = personalData.birthDate;
  document.getElementById("gender").textContent = personalData.gender;
  document.getElementById("address").textContent = personalData.address;
  document.getElementById("phone").textContent = personalData.phone;
  document.getElementById("email").textContent = personalData.email;
  document.getElementById("careerGoal").textContent = personalData.careerGoal;
}

// H√†m hi·ªÉn th·ªã th√¥ng b√°o
function showNotification(message) {
  // T·∫°o element th√¥ng b√°o
  const notification = document.createElement("div");
  notification.innerHTML = `
        <div style="
            position: fixed;
            top: 20px;
            right: 20px;
            background: #28a745;
            color: white;
            padding: 15px 25px;
            border-radius: 8px;
            box-shadow: 0 4px 12px rgba(0,0,0,0.2);
            z-index: 3000;
            animation: slideInRight 0.3s ease;
        ">
            <i class="fas fa-check-circle"></i> ${message}
        </div>
    `;

  document.body.appendChild(notification);

  // T·ª± ƒë·ªông x√≥a sau 3 gi√¢y
  setTimeout(() => {
    notification.style.animation = "slideOutRight 0.3s ease";
    setTimeout(() => {
      document.body.removeChild(notification);
    }, 300);
  }, 3000);
}

// Smooth scrolling cho navigation
document.querySelectorAll(".nav-link").forEach((link) => {
  link.addEventListener("click", function (e) {
    e.preventDefault();

    const targetId = this.getAttribute("href").substring(1);
    const targetElement = document.getElementById(targetId);

    if (targetElement) {
      const offsetTop = targetElement.offsetTop - 70; // Tr·ª´ height c·ªßa navbar

      window.scrollTo({
        top: offsetTop,
        behavior: "smooth",
      });
    }
  });
});

// Hi·ªáu ·ª©ng parallax cho banner
window.addEventListener("scroll", function () {
  const scrolled = window.pageYOffset;
  const banner = document.querySelector(".banner");
  const rate = scrolled * -0.5;

  if (banner) {
    banner.style.transform = `translateY(${rate}px)`;
  }
});

// Animation khi scroll ƒë·∫øn section
const observerOptions = {
  threshold: 0.1,
  rootMargin: "0px 0px -50px 0px",
};

const observer = new IntersectionObserver(function (entries) {
  entries.forEach((entry) => {
    if (entry.isIntersecting) {
      entry.target.style.animation = "fadeInUp 0.6s ease-out";
      entry.target.style.opacity = "1";
    }
  });
}, observerOptions);

// Quan s√°t t·∫•t c·∫£ c√°c section
document.querySelectorAll(".section").forEach((section) => {
  observer.observe(section);
});

// Hi·ªáu ·ª©ng typing cho ti√™u ƒë·ªÅ
function typeWriter(element, text, speed = 100) {
  let i = 0;
  element.textContent = "";

  function typing() {
    if (i < text.length) {
      element.textContent += text.charAt(i);
      i++;
      setTimeout(typing, speed);
    }
  }
  typing();
}

// Kh·ªüi ƒë·ªông hi·ªáu ·ª©ng typing khi load trang
window.addEventListener("load", function () {
  const nameElement = document.getElementById("fullName");
  const originalText = nameElement.textContent;
  typeWriter(nameElement, originalText, 100);

  // Animate skill bars
  setTimeout(() => {
    document.querySelectorAll(".skill-progress").forEach((bar) => {
      const width = bar.style.width;
      bar.style.width = "0";
      setTimeout(() => {
        bar.style.width = width;
      }, 500);
    });
  }, 1000);
});

// Th√™m hi·ªáu ·ª©ng hover cho c√°c section
document.querySelectorAll(".section").forEach((section) => {
  section.addEventListener("mouseenter", function () {
    this.style.transform = "translateY(-5px) scale(1.02)";
  });

  section.addEventListener("mouseleave", function () {
    this.style.transform = "translateY(0) scale(1)";
  });
});

// Console easter egg
console.log(`
‚ïî‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïó
‚ïë           üöÄ CV C√° Nh√¢n v1.0 üöÄ              ‚ïë
‚ïë                                              ‚ïë
‚ïë   T√°c gi·∫£: Nguy·ªÖn Th√°i Tu·∫•n                  ‚ïë
‚ïë   Thi·∫øt k·∫ø: Hi·ªán ƒë·∫°i & T∆∞∆°ng th√≠ch di ƒë·ªông   ‚ïë
‚ïë   C√¥ng ngh·ªá: HTML5, CSS3, JavaScript         ‚ïë
‚ïë                                              ‚ïë
‚ïë   üí° M·∫πo s·ª≠ d·ª•ng:                            ‚ïë
‚ïë   - Nh·∫•n ƒë√∫p v√†o ·∫£nh ƒë·∫°i di·ªán ƒë·ªÉ ƒë·ªïi ·∫£nh     ‚ïë
‚ïë   - Nh·∫•n n√∫t "Ch·ªânh s·ª≠a th√¥ng tin" ƒë·ªÉ c·∫≠p nh·∫≠t‚ïë
‚ïë   - K√©o xu·ªëng ƒë·ªÉ xem hi·ªáu ·ª©ng ƒë·ªông           ‚ïë
‚ïö‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïù
    `);

// Theme toggle functionality
let isDarkMode = false;

function toggleTheme() {
  isDarkMode = !isDarkMode;
  const body = document.body;
  const themeIcon = document.getElementById("themeIcon");

  if (isDarkMode) {
    body.style.filter = "invert(1) hue-rotate(180deg)";
    body.style.transition = "filter 0.3s ease";
    themeIcon.className = "fas fa-sun";
  } else {
    body.style.filter = "none";
    themeIcon.className = "fas fa-moon";
  }
}

// Highlight active navigation
window.addEventListener("scroll", function () {
  const sections = document.querySelectorAll(".section");
  const navLinks = document.querySelectorAll(".nav-link");

  let current = "";
  sections.forEach((section) => {
    const sectionTop = section.offsetTop;
    const sectionHeight = section.clientHeight;
    if (scrollY >= sectionTop - 200) {
      current = section.getAttribute("id");
    }
  });

  navLinks.forEach((link) => {
    link.classList.remove("active");
    if (link.getAttribute("href") === "#" + current) {
      link.classList.add("active");
    }
  });
});
